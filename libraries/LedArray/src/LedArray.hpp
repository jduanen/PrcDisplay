/*
* Library that scrolls messages on a small (<32 columns) array of LEDs
*
* N.B. Fonts are built-in and generated by fontgen.c
*/

template<uint8_t Size>
LedArray<Size>::LedArray(byte dataPin, byte srClkPin, byte rClkPin, byte numRows, byte numCols, int scrollSpeed) {
    stdWaitCycles = scrollSpeed;
    waitCycles = stdWaitCycles;
    numRows = numRows;
    numCols = numCols;
    frameBufferPtr = new uint32_t[numRows];
    ShiftRegister74HC595<Size>(dataPin, srClkPin, rClkPin);
}

void LedArray::clear() {
    printf("clear: TBD");
}

void LedArray::fill(uint32_t val) {
    printf("fill: TBD");
}

void LedArray::fill(uint32_t vals[]) {
    for (int i = 0; i < numRows; i++) {
        fill(vals[i]);
    }
}

void LedArray::run() {
    printf("run: TBD");
}

//// TODO add getFonts() -- return number and description of each font

void message(String str, byte fontNumber) {
    assert((fontNumber >= 0) && (fontNumber < NUM_FONTS)); // Invalid font number selection
    printf("message: TBD");
}

void appendMessage(String str, byte fontNumber) {
    assert((fontNumber >= 0) && (fontNumber < NUM_FONTS)); // Invalid font number selection
    printf("appendMessage: TBD");
}

void LedArray::writeToFB(char *strPtr) {
    printf("writeToFB: TBD");
}

void LedArray::scrollMessage() {
    printf("scrollMessage: TBD");
}

void LedArray::scanDisplay() {
    printf("scanDisplay: TBD");
}
