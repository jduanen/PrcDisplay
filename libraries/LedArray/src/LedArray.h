/*
* Library that scrolls messages on a small (<32 columns) array of LEDs
*
* N.B.
*  - The timing constants are all scaled to a standard ESP8266 clock
*     * change them when running at different clock speed
*  - Fonts are built-in and generated by fontgen.c
*/

// TODO
//  * add OE pin to the constructor
//  * add blink mode option

#pragma once

#include <Arduino.h>
#include <ShiftRegister74HC595.h>
#include "fonts.h"

//// FIXME figure out how to handle this
#define NUM_SR          4
#define LIB_VERSION     "1.0"
#define LONG_WAIT       1000


template<uint8_t Size>
class LedArray {
public:
    String libVersion = LIB_VERSION;

    LedArray(const uint8_t dataPin, const uint8_t srClkPin, const uint8_t rClkPin, const uint8_t numRows, const uint8_t numCols, const uint8_t numSRs, const int scrollSpeed);

    void clear();
    void fill(uint32_t val);
    void run();
    //// TODO add getFonts() -- return number and description of each font
    void message(const char str[], const char font);
    void message(String *strPtr, const char font);
    void appendMessage(const char str[], const char font);
    void appendMessage(String *strPtr, const char font);

private:
    int _stdWaitCycles;
    int _waitCycles;

    uint8_t _numRows;
    uint8_t _numCols;
    int _numSRs;

    //// FIXME figure out how to handle this
    ShiftRegister74HC595<NUM_SR> *_srPtr;

    // active high bitmap, row pixels start at the LSB, [0,0] is upper left corner
    uint32_t *_frameBufferPtr;

    String _msg = "";
    String _fontNums = "";

    int _loopCount = 0;
    int _curChar = 0;
    uint8_t _curCol = 0;

//    void _message(String str, const char font);
    //void writeToFB(char *strPtr);
    void scrollMessage();
    void scanDisplay();
    void clearDisplay();
};

#include "LedArray.hpp"
